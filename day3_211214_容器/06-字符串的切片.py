# 切片: 就是通过一定的操作获取字符串中一部分数据的方式

# 例如: 从abcd 中截取abc

# 切片的前提是有下标,否则无法找到截取位置 ,所以说只有通过下标可以获取内部元素的容器类型才支持切片

# 切片的格式: 字符串[起始位置: 结束位置: 步长]

str1 = 'chuanzhi'
# 需求:截取chuan
# 从下标为0的位置截取到下标为4(因为切片区间为左闭右开), 步长为1
print(str1[0: 5: 1])

str2 = '我爱北京天安门,天安门上太阳升'
# 需求: 截取北京
print(str2[2: 4: 1])

# 需求: 截取太阳
print(str2[-3:-1:1])

# 步长:每次获取数据的间隔

# 获取 北天
print(str2[2:5:2])

# 省略:
# 可以省略步长,省略步长时,默认步长为1
# 省略步长时,可以同时省略:
print(str2[2:4])  # 北京

# 可不可以省略起始位置或终止位置呢???

# 步长正负问题:

# 步长为负,则从右至左取值
# 起始位置是4,终止位置是6 从起始位置开始,从右至左,按步长为1取值,没有值,所以返回空字符串 ''
print(str2[4:7:-1])

# 如果想让其有值,输出 门安天
# 起始位置是6,终止位置是4, 从起始位置开始从右至左按步长为1取值,有值,值为门安天
print(str2[6:3:-1]) # 门安天

# 省略起始位置,默认为字符串结束
print(str2[:8:-1]) # 升阳太上门安
# 省略终止位置,默认为字符串开始
print(str2[8::-1]) # 天,门安天京北爱我


# 步长为正,则从左至右取值
str2 = '我爱北京天安门,天安门上太阳升'
# 省略起始位置,起始位置默认为字符串开始
# print(str2[:6:1])
# 省略终止位置,终止位置默认为字符串结束
# print(str2[8::1])
# 省略终止位置,不是默认为-1,因为终止位置不包含
# print(str2[8:-1:1])
# 省略起始和终止位置时不能省略:


# 在切片中只要记住如下内容,永远不会错
# 1.正数步长从左至右取值,负数步长从右至左取值
# 2.起始和终止位置,左闭右开
# 3.取值从起始位置开始

# 排序一般从0开始, 因为排序要给计算机看
# 统计一般从1开始,因为统计是自己看

# 在开发中经常会使用切片进行容器反转
str1 = '123'
print(str1[::-1])

# 在开发中也可以使用切片对容器进行复制
print(str1[:])


